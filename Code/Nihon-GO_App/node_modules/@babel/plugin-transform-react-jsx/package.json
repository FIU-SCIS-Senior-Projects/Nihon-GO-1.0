{
  "_args": [
    [
      {
        "raw": "@babel/plugin-transform-react-jsx@^7.0.0-beta",
        "scope": "@babel",
        "escapedName": "@babel%2fplugin-transform-react-jsx",
        "name": "@babel/plugin-transform-react-jsx",
        "rawSpec": "^7.0.0-beta",
        "spec": ">=7.0.0-beta <8.0.0",
        "type": "range"
      },
      "C:\\Users\\user1\\Nihon-GO-1.0\\Code\\Nihon-GO_App\\node_modules\\metro"
    ]
  ],
  "_from": "@babel/plugin-transform-react-jsx@>=7.0.0-beta <8.0.0",
  "_id": "@babel/plugin-transform-react-jsx@7.0.0-beta.44",
  "_inCache": true,
  "_location": "/@babel/plugin-transform-react-jsx",
  "_nodeVersion": "8.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/plugin-transform-react-jsx_7.0.0-beta.44_1522707623750_0.6209331021880193"
  },
  "_npmUser": {
    "name": "hzoo",
    "email": "hi@henryzoo.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@babel/plugin-transform-react-jsx@^7.0.0-beta",
    "scope": "@babel",
    "escapedName": "@babel%2fplugin-transform-react-jsx",
    "name": "@babel/plugin-transform-react-jsx",
    "rawSpec": "^7.0.0-beta",
    "spec": ">=7.0.0-beta <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/metro"
  ],
  "_resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.0.0-beta.44.tgz",
  "_shasum": "656a2582002ff1b0eea4cd01b7c8f6cbbf3990bf",
  "_shrinkwrap": null,
  "_spec": "@babel/plugin-transform-react-jsx@^7.0.0-beta",
  "_where": "C:\\Users\\user1\\Nihon-GO-1.0\\Code\\Nihon-GO_App\\node_modules\\metro",
  "dependencies": {
    "@babel/helper-builder-react-jsx": "7.0.0-beta.44",
    "@babel/helper-plugin-utils": "7.0.0-beta.44",
    "@babel/plugin-syntax-jsx": "7.0.0-beta.44"
  },
  "description": "Turn JSX into React function calls",
  "devDependencies": {
    "@babel/core": "7.0.0-beta.44",
    "@babel/helper-plugin-test-runner": "7.0.0-beta.44"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-g25pZKtPRndcaqt+ZRoeV02P37HZKhQyswkpoqwGYfzlKy0SaCCu1ZrhxsXgLBYr86RXP6huaGM9ZSzC9xjufw==",
    "shasum": "656a2582002ff1b0eea4cd01b7c8f6cbbf3990bf",
    "tarball": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx/-/plugin-transform-react-jsx-7.0.0-beta.44.tgz",
    "fileCount": 3,
    "unpackedSize": 7941
  },
  "keywords": [
    "babel-plugin"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "andarist",
      "email": "mateuszburzynski@gmail.com"
    },
    {
      "name": "danez",
      "email": "daniel@tschinder.de"
    },
    {
      "name": "existentialism",
      "email": "bng412@gmail.com"
    },
    {
      "name": "hzoo",
      "email": "hi@henryzoo.com"
    },
    {
      "name": "loganfsmyth",
      "email": "loganfsmyth@gmail.com"
    },
    {
      "name": "xtuc",
      "email": "contact@xtuc.fr"
    }
  ],
  "name": "@babel/plugin-transform-react-jsx",
  "optionalDependencies": {},
  "peerDependencies": {
    "@babel/core": "7.0.0-beta.44"
  },
  "readme": "# @babel/plugin-transform-react-jsx\n\n> Turn JSX into React function calls\n\n## Example\n\n### React\n\n**In**\n\n```javascript\nvar profile = <div>\n  <img src=\"avatar.png\" className=\"profile\" />\n  <h3>{[user.firstName, user.lastName].join(' ')}</h3>\n</div>;\n```\n\n**Out**\n\n```javascript\nvar profile = React.createElement(\"div\", null,\n  React.createElement(\"img\", { src: \"avatar.png\", className: \"profile\" }),\n  React.createElement(\"h3\", null, [user.firstName, user.lastName].join(\" \"))\n);\n```\n\n### Custom\n\n**In**\n\n```javascript\n/** @jsx dom */\n\nvar { dom } = require(\"deku\");\n\nvar profile = <div>\n  <img src=\"avatar.png\" className=\"profile\" />\n  <h3>{[user.firstName, user.lastName].join(' ')}</h3>\n</div>;\n```\n\n**Out**\n\n```javascript\n/** @jsx dom */\n\nvar dom = require(\"deku\").dom;\n\nvar profile = dom(\"div\", null,\n  dom(\"img\", { src: \"avatar.png\", className: \"profile\" }),\n  dom(\"h3\", null, [user.firstName, user.lastName].join(\" \"))\n);\n```\n\n### Fragments\n\nFragments are a feature available in React 16.2.0+.\n\n#### React\n\n**In**\n\n```javascript\nvar descriptions = items.map(item => (\n  <>\n    <dt>{item.name}</dt>\n    <dd>{item.value}</dd>\n  </>\n));\n```\n\n**Out**\n\n```javascript\nvar descriptions = items.map(item => React.createElement(\n  React.Fragment,\n  null,\n  React.createElement(\"dt\", null, item.name),\n  React.createElement(\"dd\", null, item.value)\n));\n```\n\n#### Custom\n\n**In**\n\n```javascript\n/** @jsx dom */\n/** @jsxFrag DomFrag */\n\nvar { dom, DomFrag } = require(\"deku\"); // DomFrag is fictional!\n\nvar descriptions = items.map(item => (\n  <>\n    <dt>{item.name}</dt>\n    <dd>{item.value}</dd>\n  </>\n));\n```\n\n**Out**\n\n```javascript\n/** @jsx dom */\n/** @jsxFrag DomFrag */\n\nvar { dom, DomFrag } = require(\"deku\"); // DomFrag is fictional!\n\nvar descriptions = items.map(item => dom(\n  DomFrag,\n  null,\n  dom(\"dt\", null, item.name),\n  dom(\"dd\", null, item.value)\n));\n```\n\nNote that if a custom pragma is specified, then a custom fragment pragma must also be specified if the `<></>` is used. Otherwise, an error will be thrown.\n\n## Installation\n\n```sh\nnpm install --save-dev @babel/plugin-transform-react-jsx\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\nWithout options:\n\n```json\n{\n  \"plugins\": [\"@babel/plugin-transform-react-jsx\"]\n}\n```\n\nWith options:\n\n```json\n{\n  \"plugins\": [\n    [\"@babel/plugin-transform-react-jsx\", {\n      \"pragma\": \"dom\", // default pragma is React.createElement\n      \"pragmaFrag\": \"DomFrag\", // default is React.Fragment\n      \"throwIfNamespace\": false // defaults to true\n    }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins @babel/plugin-transform-react-jsx script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"@babel/core\").transform(\"code\", {\n  plugins: [\"@babel/plugin-transform-react-jsx\"]\n});\n```\n\n## Options\n\n### `pragma`\n\n`string`, defaults to `React.createElement`.\n\nReplace the function used when compiling JSX expressions.\n\nNote that the `@jsx React.DOM` pragma has been deprecated as of React v0.12\n\n### `pragmaFrag`\n\n`string`, defaults to `React.Fragment`.\n\nReplace the component used when compiling JSX fragments.\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nWhen spreading props, use `Object.assign` directly instead of Babel's extend helper.\n\n### `throwIfNamespace`\n\n`boolean`, defaults to `true`.\n\nToggles whether or not to throw an error if a XML namespaced tag name is used. For example:\n\n    <f:image />\n\nThough the JSX spec allows this, it is disabled by default since React's JSX does not currently have support for it.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-react-jsx"
  },
  "version": "7.0.0-beta.44"
}
