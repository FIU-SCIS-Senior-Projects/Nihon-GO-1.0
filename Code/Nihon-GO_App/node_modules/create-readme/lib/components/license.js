// Generated by CoffeeScript 1.10.0
(function() {
  var LicenseParser, Promise, fs, logger;

  logger = require('../logger');

  Promise = require('bluebird');

  fs = Promise.promisifyAll(require('fs'));

  module.exports = LicenseParser = (function() {
    LicenseParser.name = "LicenseParser";

    function LicenseParser(options) {
      var base, base1;
      this.options = options;
      if (this.options == null) {
        this.options = {};
      }
      if ((base = this.options).encoding == null) {
        base.encoding = 'utf-8';
      }
      if ((base1 = this.options).licenseFile == null) {
        base1.licenseFile = 'LICENSE.txt';
      }
    }

    LicenseParser.prototype.run = function(pkg) {
      var file;
      logger.info("Creating license info");
      if (!pkg.license) {
        return Promise.resolve(null);
      }
      logger.debug(" Reading license file from " + this.options.licenseFile);
      file = fs.readFileAsync(this.options.licenseFile, {
        encoding: this.options.encoding
      }).then((function(_this) {
        return function() {
          logger.debug("License file " + _this.options.licenseFile + " found");
          return _this.options.licenseFile;
        };
      })(this))["catch"]({
        code: 'ENOENT'
      }, function() {
        logger.debug("No license file found");
        return "";
      });
      return Promise.resolve({
        name: pkg.license,
        file: file
      }).props();
    };

    return LicenseParser;

  })();

}).call(this);
