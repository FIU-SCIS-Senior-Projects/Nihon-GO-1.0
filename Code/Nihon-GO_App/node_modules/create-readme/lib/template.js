// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, TemplateLoader, fs, logger, path;

  Promise = require('bluebird');

  fs = Promise.promisifyAll(require('fs'));

  path = require('path');

  logger = require('./logger');

  module.exports = TemplateLoader = (function() {
    TemplateLoader.name = "TemplateLoader";

    function TemplateLoader(options) {
      var base, base1;
      this.options = options;
      if (this.options == null) {
        this.options = {};
      }
      if ((base = this.options).templateFile == null) {
        base.templateFile = path.resolve(__dirname, '../templates/README.md');
      }
      if ((base1 = this.options).encoding == null) {
        base1.encoding = 'utf-8';
      }
    }

    TemplateLoader.prototype.loadTemplate = function() {
      logger.info("Loading template");
      logger.debug(" Loading template from " + this.options.templateFile);
      return fs.readFileAsync(this.options.templateFile, {
        encoding: this.options.encoding
      });
    };

    return TemplateLoader;

  })();

}).call(this);
