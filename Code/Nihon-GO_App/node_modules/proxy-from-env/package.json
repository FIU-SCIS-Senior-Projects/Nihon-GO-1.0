{
  "_args": [
    [
      {
        "raw": "proxy-from-env@^1.0.0",
        "scope": null,
        "escapedName": "proxy-from-env",
        "name": "proxy-from-env",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\user1\\Nihon-GO-1.0\\Code\\Nihon-GO_App\\node_modules\\proxy-agent"
    ]
  ],
  "_from": "proxy-from-env@>=1.0.0 <2.0.0",
  "_id": "proxy-from-env@1.0.0",
  "_inCache": true,
  "_location": "/proxy-from-env",
  "_nodeVersion": "7.5.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/proxy-from-env-1.0.0.tgz_1487931977410_0.9466661661863327"
  },
  "_npmUser": {
    "name": "rob-w",
    "email": "rob@robwu.nl"
  },
  "_npmVersion": "4.1.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "proxy-from-env@^1.0.0",
    "scope": null,
    "escapedName": "proxy-from-env",
    "name": "proxy-from-env",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/proxy-agent"
  ],
  "_resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.0.0.tgz",
  "_shasum": "33c50398f70ea7eb96d21f7b817630a55791c7ee",
  "_shrinkwrap": null,
  "_spec": "proxy-from-env@^1.0.0",
  "_where": "C:\\Users\\user1\\Nihon-GO-1.0\\Code\\Nihon-GO_App\\node_modules\\proxy-agent",
  "author": {
    "name": "Rob Wu",
    "email": "rob@robwu.nl",
    "url": "https://robwu.nl/"
  },
  "bugs": {
    "url": "https://github.com/Rob--W/proxy-from-env/issues"
  },
  "dependencies": {},
  "description": "Offers getProxyForUrl to get the proxy URL for a URL, respecting the *_PROXY (e.g. HTTP_PROXY) and NO_PROXY environment variables.",
  "devDependencies": {
    "coveralls": "^2.11.6",
    "istanbul": "^0.4.2",
    "jscs": "^2.10.1",
    "jshint": "^2.9.1",
    "mocha": "^2.4.5"
  },
  "directories": {},
  "dist": {
    "shasum": "33c50398f70ea7eb96d21f7b817630a55791c7ee",
    "tarball": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.0.0.tgz"
  },
  "gitHead": "bdf563343ff76e88402e1ab0b5040515b71502b5",
  "homepage": "https://github.com/Rob--W/proxy-from-env#readme",
  "keywords": [
    "proxy",
    "http_proxy",
    "https_proxy",
    "no_proxy",
    "environment"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "rob-w",
      "email": "rob@robwu.nl"
    }
  ],
  "name": "proxy-from-env",
  "optionalDependencies": {},
  "readme": "# proxy-from-env\n\n[![Build Status](https://travis-ci.org/Rob--W/proxy-from-env.svg?branch=master)](https://travis-ci.org/Rob--W/proxy-from-env)\n[![Coverage Status](https://coveralls.io/repos/github/Rob--W/proxy-from-env/badge.svg?branch=master)](https://coveralls.io/github/Rob--W/proxy-from-env?branch=master)\n\n`proxy-from-env` is a Node.js package that exports a function (`getProxyForUrl`)\nthat takes an input URL (a string or\n[`url.parse`](https://nodejs.org/docs/latest/api/url.html#url_url_parsing)'s\nreturn value) and returns the desired proxy URL (also a string) based on\nstandard proxy environment variables. If no proxy is set, an empty string is\nreturned.\n\nIt is your responsibility to actually proxy the request using the given URL.\n\nInstallation:\n\n```sh\nnpm install proxy-from-env\n```\n\n## Example\nThis example shows how the data for a URL can be fetched via the\n[`http` module](https://nodejs.org/api/http.html), in a proxy-aware way.\n\n```javascript\nvar http = require('http');\nvar parseUrl = require('url').parse;\nvar getProxyForUrl = require('proxy-from-env').getProxyForUrl;\n\nvar some_url = 'http://example.com/something';\n\n// // Example, if there is a proxy server at 10.0.0.1:1234, then setting the\n// // http_proxy environment variable causes the request to go through a proxy.\n// process.env.http_proxy = 'http://10.0.0.1:1234';\n// \n// // But if the host to be proxied is listed in NO_PROXY, then the request is\n// // not proxied (but a direct request is made).\n// process.env.no_proxy = 'example.com';\n\nvar proxy_url = getProxyForUrl(some_url);  // <-- Our magic.\nif (proxy_url) {\n  // Should be proxied through proxy_url.\n  var parsed_some_url = parseUrl(some_url);\n  var parsed_proxy_url = parseUrl(proxy_url);\n  // A HTTP proxy is quite simple. It is similar to a normal request, except the\n  // path is an absolute URL, and the proxied URL's host is put in the header\n  // instead of the server's actual host.\n  httpOptions = {\n    protocol: parsed_proxy_url.protocol,\n    hostname: parsed_proxy_url.hostname,\n    port: parsed_proxy_url.port,\n    path: parsed_some_url.href,\n    headers: {\n      Host: parsed_some_url.host,  // = host name + optional port.\n    },\n  };\n} else {\n  // Direct request.\n  httpOptions = some_url;\n}\nhttp.get(httpOptions, function(res) {\n  var responses = [];\n  res.on('data', function(chunk) { responses.push(chunk); });\n  res.on('end', function() { console.log(responses.join(''));  });\n});\n\n```\n\n## Environment variables\nThe environment variables can be specified in lowercase or uppercase, with the\nlowercase name having precedence over the uppercase variant. A variable that is\nnot set has the same meaning as a variable that is set but has no value.\n\n### NO\\_PROXY\n\n`NO_PROXY` is a list of host names (optionally with a port). If the input URL\nmatches any of the entries in `NO_PROXY`, then the input URL should be fetched\nby a direct request (i.e. without a proxy).\n\nMatching follows the following rules:\n\n- `NO_PROXY=*` disables all proxies.\n- Space and commas may be used to separate the entries in the `NO_PROXY` list.\n- If `NO_PROXY` does not contain any entries, then proxies are never disabled.\n- If a port is added after the host name, then the ports must match. If the URL\n  does not have an explicit port name, the protocol's default port is used.\n- Generally, the proxy is only disabled if the host name is an exact match for\n  an entry in the `NO_PROXY` list. The only exceptions are entries that start\n  with a dot or with a wildcard; then the proxy is disabled if the host name\n  ends with the entry.\n\nSee `test.js` for examples of what should match and what does not.\n\n### \\*\\_PROXY\n\nThe environment variable used for the proxy depends on the protocol of the URL.\nFor example, `https://example.com` uses the \"https\" protocol, and therefore the\nproxy to be used is `HTTPS_PROXY` (_NOT_ `HTTP_PROXY`, which is _only_ used for\nhttp:-URLs).\n\nThe library is not limited to http(s), other schemes such as\n`FTP_PROXY` (ftp:),\n`WSS_PROXY` (wss:),\n`WS_PROXY` (ws:)\nare also supported.\n\nIf present, `ALL_PROXY` is used as fallback if there is no other match.\n\n\n## External resources\nThe exact way of parsing the environment variables is not codified in any\nstandard. This library is designed to be compatible with formats as expected by\nexisting software.\nThe following resources were used to determine the desired behavior:\n\n- cURL:\n  https://curl.haxx.se/docs/manpage.html#ENVIRONMENT  \n  https://github.com/curl/curl/blob/4af40b3646d3b09f68e419f7ca866ff395d1f897/lib/url.c#L4446-L4514  \n  https://github.com/curl/curl/blob/4af40b3646d3b09f68e419f7ca866ff395d1f897/lib/url.c#L4608-L4638  \n\n- wget: \n  https://www.gnu.org/software/wget/manual/wget.html#Proxies  \n  http://git.savannah.gnu.org/cgit/wget.git/tree/src/init.c?id=636a5f9a1c508aa39e35a3a8e9e54520a284d93d#n383  \n  http://git.savannah.gnu.org/cgit/wget.git/tree/src/retr.c?id=93c1517c4071c4288ba5a4b038e7634e4c6b5482#n1278  \n\n- W3:\n  https://www.w3.org/Daemon/User/Proxies/ProxyClients.html  \n\n- Python's urllib:\n  https://github.com/python/cpython/blob/936135bb97fe04223aa30ca6e98eac8f3ed6b349/Lib/urllib/request.py#L755-L782  \n  https://github.com/python/cpython/blob/936135bb97fe04223aa30ca6e98eac8f3ed6b349/Lib/urllib/request.py#L2444-L2479\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Rob--W/proxy-from-env.git"
  },
  "scripts": {
    "lint": "jscs *.js && jshint *.js",
    "test": "mocha ./test.js --reporter spec",
    "test-coverage": "istanbul cover ./node_modules/.bin/_mocha -- --reporter spec"
  },
  "version": "1.0.0"
}
