{
  "_args": [
    [
      {
        "raw": "react-native-modal@^5.2.0",
        "scope": null,
        "escapedName": "react-native-modal",
        "name": "react-native-modal",
        "rawSpec": "^5.2.0",
        "spec": ">=5.2.0 <6.0.0",
        "type": "range"
      },
      "C:\\Users\\daeddy\\SeniorProject\\Nihon-GO-1.0\\Code\\Nihon-GO_App"
    ]
  ],
  "_from": "react-native-modal@>=5.2.0 <6.0.0",
  "_id": "react-native-modal@5.4.0",
  "_inCache": true,
  "_location": "/react-native-modal",
  "_nodeVersion": "9.9.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-native-modal_5.4.0_1522054093548_0.3401140774558691"
  },
  "_npmUser": {
    "name": "mmazzarolo",
    "email": "mazzarolomatteo@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-native-modal@^5.2.0",
    "scope": null,
    "escapedName": "react-native-modal",
    "name": "react-native-modal",
    "rawSpec": "^5.2.0",
    "spec": ">=5.2.0 <6.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-native-modal/-/react-native-modal-5.4.0.tgz",
  "_shasum": "95f70b5d68e08824951cd11038b9db2d6fdb9962",
  "_shrinkwrap": null,
  "_spec": "react-native-modal@^5.2.0",
  "_where": "C:\\Users\\daeddy\\SeniorProject\\Nihon-GO-1.0\\Code\\Nihon-GO_App",
  "author": {
    "name": "Mazzarolo Matteo"
  },
  "bugs": {
    "url": "https://github.com/react-native-community/react-native-modal/issues"
  },
  "dependencies": {
    "prop-types": "^15.6.1",
    "react-native-animatable": "^1.2.4"
  },
  "description": "An enhanced React-Native modal",
  "devDependencies": {
    "babel-eslint": "^8.2.2",
    "eslint": "^4.19.1",
    "eslint-plugin-react-app": "^3.0.0",
    "husky": "0.14.3",
    "lint-staged": "^7.0.0",
    "prettier": "^1.11.1",
    "react": ">=15.0.0",
    "react-native": ">=0.24.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-Bvq4FQPMAFijqjqNX6TxLgKOwdbruM6GvFwF9rb+mowbaFZVoYbHTKLaAbdPlrblgaZKWyOuuxBUoDx41+Xktg==",
    "shasum": "95f70b5d68e08824951cd11038b9db2d6fdb9962",
    "tarball": "https://registry.npmjs.org/react-native-modal/-/react-native-modal-5.4.0.tgz",
    "fileCount": 8,
    "unpackedSize": 28953
  },
  "gitHead": "1dafb5915e4c7826ab841829e997722f1415d6de",
  "homepage": "https://github.com/react-native-community/react-native-modal",
  "keywords": [
    "react-native",
    "react",
    "native",
    "modal",
    "android",
    "ios",
    "backdrop",
    "simple",
    "animated"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint src",
      "prettier --write",
      "git add"
    ]
  },
  "main": "src/index.js",
  "maintainers": [
    {
      "name": "brentvatne",
      "email": "brentvatne@gmail.com"
    },
    {
      "name": "mmazzarolo",
      "email": "mazzarolomatteo@gmail.com"
    }
  ],
  "name": "react-native-modal",
  "optionalDependencies": {},
  "readme": "# react-native-modal\n\n[![npm version](https://badge.fury.io/js/react-native-modal.svg)](https://badge.fury.io/js/react-native-modal)\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\nAn enhanced, animated and customizable react-native modal.\n\n## Features\n\n* Smooth enter/exit animations\n* Plain simple and flexible APIs\n* Customizable backdrop opacity, color and timing\n* Listeners for the modal animations ending\n* Resize itself correctly on device rotation\n* Swipeable\n\n## Demo\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/mmazzarolo/react-native-tips/master/imgs/modal.gif\" height=\"300\" />\n<img src=\"https://raw.githubusercontent.com/mmazzarolo/react-native-modal-datetime-picker/master/extras/datetimepicker-ios.gif\" height=\"300\" />\n<img src=\"https://raw.githubusercontent.com/mmazzarolo/react-native-animated-modal/master/extras/example-modal.gif\" height=\"300\" />\n</p>\n\n## Setup\n\nThis library is available on npm, install it with: `npm install --save react-native-modal` or `yarn add react-native-modal`.\n\n## Usage\n\nSince react-native-modal is an extension of the original react native modal, it works in a similar fashion [react-native original modal](https://facebook.github.io/react-native/docs/modal.html).\n\n1. Import react-native-modal:\n\n```javascript\nimport Modal from \"react-native-modal\";\n```\n\n2. Create a modal and nest its content inside of it:\n\n```javascript\nrender () {\n    return (\n      <View>\n        <Modal>\n          <View style={{ flex: 1 }}>\n            <Text>I am the modal content!</Text>\n          </View>\n        </Modal>\n      </View>\n    )\n  }\n```\n\n3. Then simply show it by setting the `isVisible` prop to true:\n\n```javascript\nrender () {\n    return (\n      <View>\n        <Modal isVisible={true}>\n          <View style={{ flex: 1 }}>\n            <Text>I am the modal content!</Text>\n          </View>\n        </Modal>\n      </View>\n    )\n  }\n```\n\nThe `isVisible` prop is the only prop you'll really need to make the modal work: you should control this prop value by saving it in your state and setting it to `true` or `false` when needed.\n\n## A complete example\n\nThe following example consists in a component (`ModalTester`) with a button and a modal.\nThe modal is controlled by the `isModalVisible` state variable and it is initially hidden, since its value is `false`.  \nPressing the button sets `isModalVisible` to true, making the modal visible.  \nInside the modal there is another button that, when pressed, sets `isModalVisible` to false, hiding the modal.\n\n```javascript\nimport React, { Component } from \"react\";\nimport { Text, TouchableOpacity, View } from \"react-native\";\nimport Modal from \"react-native-modal\";\n\nexport default class ModalTester extends Component {\n  state = {\n    isModalVisible: false\n  };\n\n  _toggleModal = () =>\n    this.setState({ isModalVisible: !this.state.isModalVisible });\n\n  render() {\n    return (\n      <View style={{ flex: 1 }}>\n        <TouchableOpacity onPress={this._toggleModal}>\n          <Text>Show Modal</Text>\n        </TouchableOpacity>\n        <Modal isVisible={this.state.isModalVisible}>\n          <View style={{ flex: 1 }}>\n            <Text>Hello!</Text>\n            <TouchableOpacity onPress={this._toggleModal}>\n              <Text>Hide me!</Text>\n            </TouchableOpacity>\n          </View>\n        </Modal>\n      </View>\n    );\n  }\n}\n```\n\nFor a more complex example take a look at the `/example` directory.\n\n## Available props\n\n| Name                           | Type             | Default        | Description                                                                                  |\n| ------------------------------ | ---------------- | -------------- | -------------------------------------------------------------------------------------------- |\n| animationIn                    | string or object | 'slideInUp'    | Modal show animation                                                                         |\n| animationInTiming              | number           | 300            | Timing for the modal show animation (in ms)                                                  |\n| animationOut                   | string or object | 'slideOutDown' | Modal hide animation                                                                         |\n| animationOutTiming             | number           | 300            | Timing for the modal hide animation (in ms)                                                  |\n| avoidKeyboard                  | bool             | false          | Move the modal up if the keyboard is open                                                    |\n| backdropColor                  | string           | 'black'        | The backdrop background color                                                                |\n| backdropOpacity                | number           | 0.70           | The backdrop opacity when the modal is visible                                               |\n| backdropTransitionInTiming     | number           | 300            | The backdrop show timing (in ms)                                                             |\n| backdropTransitionOutTiming    | number           | 300            | The backdrop hide timing (in ms)                                                             |\n| children                       | node             | **REQUIRED**   | The modal content                                                                            |\n| isVisible                      | bool             | **REQUIRED**   | Show the modal?                                                                              |\n| onBackButtonPress              | func             | () => null     | Called when the Android back button is pressed                                               |\n| onBackdropPress                | func             | () => null     | Called when the backdrop is pressed                                                          |\n| onModalHide                    | func             | () => null     | Called when the modal is completely hidden                                                   |\n| onModalShow                    | func             | () => null     | Called when the modal is completely visible                                                  |\n| onSwipe                        | func             | null           | Called when the `swipeThreshold` has been reached                                            |\n| swipeThreshold                 | number           | 100            | Swiping threshold that when reached calls `onSwipe`                                          |\n| swipeDirection                 | string           | null           | Defines the direction where the modal can be swiped (can be 'up', 'down', 'left, or 'right') |\n| useNativeDriver                | bool             | false          | Defines if animations should use native driver                                               |\n| hideModalContentWhileAnimating | bool             | false          | Enhances the performance by hiding the modal content until the animations complete           |\n| style                          | any              | null           | Style applied to the modal                                                                   |\n\n## Frequently Asked Questions\n\n### The component is not working as expected\n\nUnder the hood `react-native-modal` uses react-native original [Modal component](https://facebook.github.io/react-native/docs/modal.html).  \nBefore reporting a bug, try swapping `react-native-modal` with react-native original Modal component and, if the issue persists, check if it has already been reported as a [react-native issue](https://github.com/facebook/react-native/issues).\n\n### How can I hide the modal by pressing outside of its content?\n\nThe prop `onBackdropPress` allows you to handle this situation:\n\n```javascript\n<Modal\n  isVisible={this.state.isVisible}\n  onBackdropPress={() => this.setState({ isVisible: false })}\n>\n  <View style={{ flex: 1 }}>\n    <Text>I am the modal content!</Text>\n  </View>\n</Modal>\n```\n\n### How can I hide the modal by swiping it?\n\nThe prop `onSwipe` allows you to handle this situation (remember to set `swipeDirection` too!):\n\n```javascript\n<Modal\n  isVisible={this.state.isVisible}\n  onSwipe={() => this.setState({ isVisible: false })}\n  swipeDirection=\"left\"\n>\n  <View style={{ flex: 1 }}>\n    <Text>I am the modal content!</Text>\n  </View>\n</Modal>\n```\n\n### The modal flashes in a weird way when animating\n\nUnfortunately this is a [know issue](https://github.com/react-native-community/react-native-modal/issues/92) that happens when `useNativeDriver=true` and must still be solved.  \nIn the meanwhile as a workaround you can set the `hideModalContentWhileAnimating` prop to `true`: this seems to solve the issue.\nAlso, do not assign a `backgroundColor` property directly to the Modal. Prefer to set it on the child container.\n\n### The modal background doesn't animate properly\n\nAre you sure you named the `isVisible` prop correctly? Make sure it is spelled correctly: `isVisible`, not `visible`.\n\n### The modal doesn't change orientation\n\nAdd a `supportedOrientations={['portrait', 'landscape']}` prop to the component, as described [in the React Native documentation](https://facebook.github.io/react-native/docs/modal.html#supportedorientations).\n\n## Available animations\n\nTake a look at [react-native-animatable](https://github.com/oblador/react-native-animatable) to see the dozens of animations available out-of-the-box. You can also pass in custom animation definitions and have them automatically register with react-native-animatable. For more information on creating custom animations, see the react-native-animatable [animation definition schema](https://github.com/oblador/react-native-animatable#animation-definition-schema).\n\n## Acknowledgements \n\nThanks [@oblador](https://github.com/oblador) for react-native-animatable, [@brentvatne](https://github.com/brentvatne) for the npm namespace and to anyone who contributed to this library!\n\nPull requests, feedbacks and suggestions are welcome!\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/react-native-community/react-native-modal.git"
  },
  "scripts": {
    "lint": "eslint src",
    "precommit": "lint-staged",
    "prettier": "prettier --write src/**/*.js",
    "reset": "watchman watch-del-all && rm -rf node_modules/ && npm cache clean && npm prune && yarn cache clean",
    "test": "npm run lint"
  },
  "types": "src/index.d.ts",
  "version": "5.4.0"
}
